local tf = (import 'github.com/tf-libsonnet/core/main.libsonnet');
{
  new(
    resourceLabel,
    storage_account_access_key=null,
    storage_container_path,
    storage_container_sas_key=null,
    sql_pool_security_alert_policy_id,
    timeouts=null,
    recurring_scans=null
  ):: tf.withResource(type='azurerm_synapse_sql_pool_vulnerability_assessment', label=resourceLabel, attrs=self.newAttrs(
    storage_account_access_key=storage_account_access_key,
    storage_container_path=storage_container_path,
    storage_container_sas_key=storage_container_sas_key,
    sql_pool_security_alert_policy_id=sql_pool_security_alert_policy_id,
    timeouts=timeouts,
    recurring_scans=recurring_scans
  )),
  newAttrs(
    storage_account_access_key=null,
    storage_container_path,
    storage_container_sas_key=null,
    sql_pool_security_alert_policy_id,
    recurring_scans=null,
    timeouts=null
  ):: std.prune(a={
    storage_account_access_key: storage_account_access_key,
    storage_container_path: storage_container_path,
    storage_container_sas_key: storage_container_sas_key,
    sql_pool_security_alert_policy_id: sql_pool_security_alert_policy_id,
    recurring_scans: recurring_scans,
    timeouts: timeouts,
  }),
  withStorageContainerPath(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          storage_container_path: value,
        },
      },
    },
  },
  withStorageContainerSasKey(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          storage_container_sas_key: value,
        },
      },
    },
  },
  withSqlPoolSecurityAlertPolicyId(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          sql_pool_security_alert_policy_id: value,
        },
      },
    },
  },
  withStorageAccountAccessKey(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          storage_account_access_key: value,
        },
      },
    },
  },
  withTimeouts(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          timeouts: value,
        },
      },
    },
  },
  withTimeoutsMixin(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          timeouts+: value,
        },
      },
    },
  },
  timeouts:: {
    new(
      read=null,
      update=null,
      create=null,
      delete=null
    ):: std.prune(a={
      read: read,
      update: update,
      create: create,
      delete: delete,
    }),
  },
  withRecurringScans(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          recurring_scans: value,
        },
      },
    },
  },
  withRecurringScansMixin(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment+: {
        [resourceLabel]+: {
          recurring_scans+: if std.isArray(v=value) then value else [value],
        },
      },
    },
  },
  recurring_scans:: {
    new(
      email_subscription_admins_enabled=null,
      emails=null,
      enabled=null
    ):: std.prune(a={
      email_subscription_admins_enabled: email_subscription_admins_enabled,
      emails: emails,
      enabled: enabled,
    }),
  },
}
