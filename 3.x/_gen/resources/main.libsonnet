local d = (import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet');
{
  '#':: d.pkg(name='resource', url='', help=''),
  aadb2c_directory: (import 'aadb2c_directory.libsonnet'),
  active_directory_domain_service: (import 'active_directory_domain_service.libsonnet'),
  active_directory_domain_service_replica_set: (import 'active_directory_domain_service_replica_set.libsonnet'),
  active_directory_domain_service_trust: (import 'active_directory_domain_service_trust.libsonnet'),
  advanced_threat_protection: (import 'advanced_threat_protection.libsonnet'),
  analysis_services_server: (import 'analysis_services_server.libsonnet'),
  api_connection: (import 'api_connection.libsonnet'),
  api_management: (import 'api_management.libsonnet'),
  api_management_api: (import 'api_management_api.libsonnet'),
  api_management_api_diagnostic: (import 'api_management_api_diagnostic.libsonnet'),
  api_management_api_operation: (import 'api_management_api_operation.libsonnet'),
  api_management_api_operation_policy: (import 'api_management_api_operation_policy.libsonnet'),
  api_management_api_operation_tag: (import 'api_management_api_operation_tag.libsonnet'),
  api_management_api_policy: (import 'api_management_api_policy.libsonnet'),
  api_management_api_release: (import 'api_management_api_release.libsonnet'),
  api_management_api_schema: (import 'api_management_api_schema.libsonnet'),
  api_management_api_tag: (import 'api_management_api_tag.libsonnet'),
  api_management_api_tag_description: (import 'api_management_api_tag_description.libsonnet'),
  api_management_api_version_set: (import 'api_management_api_version_set.libsonnet'),
  api_management_authorization_server: (import 'api_management_authorization_server.libsonnet'),
  api_management_backend: (import 'api_management_backend.libsonnet'),
  api_management_certificate: (import 'api_management_certificate.libsonnet'),
  api_management_custom_domain: (import 'api_management_custom_domain.libsonnet'),
  api_management_diagnostic: (import 'api_management_diagnostic.libsonnet'),
  api_management_email_template: (import 'api_management_email_template.libsonnet'),
  api_management_gateway: (import 'api_management_gateway.libsonnet'),
  api_management_gateway_api: (import 'api_management_gateway_api.libsonnet'),
  api_management_gateway_certificate_authority: (import 'api_management_gateway_certificate_authority.libsonnet'),
  api_management_gateway_host_name_configuration: (import 'api_management_gateway_host_name_configuration.libsonnet'),
  api_management_global_schema: (import 'api_management_global_schema.libsonnet'),
  api_management_group: (import 'api_management_group.libsonnet'),
  api_management_group_user: (import 'api_management_group_user.libsonnet'),
  api_management_identity_provider_aad: (import 'api_management_identity_provider_aad.libsonnet'),
  api_management_identity_provider_aadb2c: (import 'api_management_identity_provider_aadb2c.libsonnet'),
  api_management_identity_provider_facebook: (import 'api_management_identity_provider_facebook.libsonnet'),
  api_management_identity_provider_google: (import 'api_management_identity_provider_google.libsonnet'),
  api_management_identity_provider_microsoft: (import 'api_management_identity_provider_microsoft.libsonnet'),
  api_management_identity_provider_twitter: (import 'api_management_identity_provider_twitter.libsonnet'),
  api_management_logger: (import 'api_management_logger.libsonnet'),
  api_management_named_value: (import 'api_management_named_value.libsonnet'),
  api_management_notification_recipient_email: (import 'api_management_notification_recipient_email.libsonnet'),
  api_management_notification_recipient_user: (import 'api_management_notification_recipient_user.libsonnet'),
  api_management_openid_connect_provider: (import 'api_management_openid_connect_provider.libsonnet'),
  api_management_policy: (import 'api_management_policy.libsonnet'),
  api_management_product: (import 'api_management_product.libsonnet'),
  api_management_product_api: (import 'api_management_product_api.libsonnet'),
  api_management_product_group: (import 'api_management_product_group.libsonnet'),
  api_management_product_policy: (import 'api_management_product_policy.libsonnet'),
  api_management_product_tag: (import 'api_management_product_tag.libsonnet'),
  api_management_redis_cache: (import 'api_management_redis_cache.libsonnet'),
  api_management_subscription: (import 'api_management_subscription.libsonnet'),
  api_management_tag: (import 'api_management_tag.libsonnet'),
  api_management_user: (import 'api_management_user.libsonnet'),
  app_configuration: (import 'app_configuration.libsonnet'),
  app_configuration_feature: (import 'app_configuration_feature.libsonnet'),
  app_configuration_key: (import 'app_configuration_key.libsonnet'),
  app_service: (import 'app_service.libsonnet'),
  app_service_active_slot: (import 'app_service_active_slot.libsonnet'),
  app_service_certificate: (import 'app_service_certificate.libsonnet'),
  app_service_certificate_binding: (import 'app_service_certificate_binding.libsonnet'),
  app_service_certificate_order: (import 'app_service_certificate_order.libsonnet'),
  app_service_connection: (import 'app_service_connection.libsonnet'),
  app_service_custom_hostname_binding: (import 'app_service_custom_hostname_binding.libsonnet'),
  app_service_environment: (import 'app_service_environment.libsonnet'),
  app_service_environment_v3: (import 'app_service_environment_v3.libsonnet'),
  app_service_hybrid_connection: (import 'app_service_hybrid_connection.libsonnet'),
  app_service_managed_certificate: (import 'app_service_managed_certificate.libsonnet'),
  app_service_plan: (import 'app_service_plan.libsonnet'),
  app_service_public_certificate: (import 'app_service_public_certificate.libsonnet'),
  app_service_slot: (import 'app_service_slot.libsonnet'),
  app_service_slot_custom_hostname_binding: (import 'app_service_slot_custom_hostname_binding.libsonnet'),
  app_service_slot_virtual_network_swift_connection: (import 'app_service_slot_virtual_network_swift_connection.libsonnet'),
  app_service_source_control: (import 'app_service_source_control.libsonnet'),
  app_service_source_control_slot: (import 'app_service_source_control_slot.libsonnet'),
  app_service_source_control_token: (import 'app_service_source_control_token.libsonnet'),
  app_service_virtual_network_swift_connection: (import 'app_service_virtual_network_swift_connection.libsonnet'),
  application_gateway: (import 'application_gateway.libsonnet'),
  application_insights: (import 'application_insights.libsonnet'),
  application_insights_analytics_item: (import 'application_insights_analytics_item.libsonnet'),
  application_insights_api_key: (import 'application_insights_api_key.libsonnet'),
  application_insights_smart_detection_rule: (import 'application_insights_smart_detection_rule.libsonnet'),
  application_insights_web_test: (import 'application_insights_web_test.libsonnet'),
  application_insights_workbook: (import 'application_insights_workbook.libsonnet'),
  application_insights_workbook_template: (import 'application_insights_workbook_template.libsonnet'),
  application_security_group: (import 'application_security_group.libsonnet'),
  attestation_provider: (import 'attestation_provider.libsonnet'),
  automation_account: (import 'automation_account.libsonnet'),
  automation_certificate: (import 'automation_certificate.libsonnet'),
  automation_connection: (import 'automation_connection.libsonnet'),
  automation_connection_certificate: (import 'automation_connection_certificate.libsonnet'),
  automation_connection_classic_certificate: (import 'automation_connection_classic_certificate.libsonnet'),
  automation_connection_service_principal: (import 'automation_connection_service_principal.libsonnet'),
  automation_connection_type: (import 'automation_connection_type.libsonnet'),
  automation_credential: (import 'automation_credential.libsonnet'),
  automation_dsc_configuration: (import 'automation_dsc_configuration.libsonnet'),
  automation_dsc_nodeconfiguration: (import 'automation_dsc_nodeconfiguration.libsonnet'),
  automation_hybrid_runbook_worker: (import 'automation_hybrid_runbook_worker.libsonnet'),
  automation_hybrid_runbook_worker_group: (import 'automation_hybrid_runbook_worker_group.libsonnet'),
  automation_job_schedule: (import 'automation_job_schedule.libsonnet'),
  automation_module: (import 'automation_module.libsonnet'),
  automation_runbook: (import 'automation_runbook.libsonnet'),
  automation_schedule: (import 'automation_schedule.libsonnet'),
  automation_software_update_configuration: (import 'automation_software_update_configuration.libsonnet'),
  automation_source_control: (import 'automation_source_control.libsonnet'),
  automation_variable_bool: (import 'automation_variable_bool.libsonnet'),
  automation_variable_datetime: (import 'automation_variable_datetime.libsonnet'),
  automation_variable_int: (import 'automation_variable_int.libsonnet'),
  automation_variable_string: (import 'automation_variable_string.libsonnet'),
  automation_watcher: (import 'automation_watcher.libsonnet'),
  automation_webhook: (import 'automation_webhook.libsonnet'),
  availability_set: (import 'availability_set.libsonnet'),
  backup_container_storage_account: (import 'backup_container_storage_account.libsonnet'),
  backup_policy_file_share: (import 'backup_policy_file_share.libsonnet'),
  backup_policy_vm: (import 'backup_policy_vm.libsonnet'),
  backup_policy_vm_workload: (import 'backup_policy_vm_workload.libsonnet'),
  backup_protected_file_share: (import 'backup_protected_file_share.libsonnet'),
  backup_protected_vm: (import 'backup_protected_vm.libsonnet'),
  bastion_host: (import 'bastion_host.libsonnet'),
  batch_account: (import 'batch_account.libsonnet'),
  batch_application: (import 'batch_application.libsonnet'),
  batch_certificate: (import 'batch_certificate.libsonnet'),
  batch_job: (import 'batch_job.libsonnet'),
  batch_pool: (import 'batch_pool.libsonnet'),
  blueprint_assignment: (import 'blueprint_assignment.libsonnet'),
  bot_channel_alexa: (import 'bot_channel_alexa.libsonnet'),
  bot_channel_direct_line_speech: (import 'bot_channel_direct_line_speech.libsonnet'),
  bot_channel_directline: (import 'bot_channel_directline.libsonnet'),
  bot_channel_email: (import 'bot_channel_email.libsonnet'),
  bot_channel_facebook: (import 'bot_channel_facebook.libsonnet'),
  bot_channel_line: (import 'bot_channel_line.libsonnet'),
  bot_channel_ms_teams: (import 'bot_channel_ms_teams.libsonnet'),
  bot_channel_slack: (import 'bot_channel_slack.libsonnet'),
  bot_channel_sms: (import 'bot_channel_sms.libsonnet'),
  bot_channel_web_chat: (import 'bot_channel_web_chat.libsonnet'),
  bot_channels_registration: (import 'bot_channels_registration.libsonnet'),
  bot_connection: (import 'bot_connection.libsonnet'),
  bot_service_azure_bot: (import 'bot_service_azure_bot.libsonnet'),
  bot_web_app: (import 'bot_web_app.libsonnet'),
  capacity_reservation: (import 'capacity_reservation.libsonnet'),
  capacity_reservation_group: (import 'capacity_reservation_group.libsonnet'),
  cdn_endpoint: (import 'cdn_endpoint.libsonnet'),
  cdn_endpoint_custom_domain: (import 'cdn_endpoint_custom_domain.libsonnet'),
  cdn_frontdoor_custom_domain: (import 'cdn_frontdoor_custom_domain.libsonnet'),
  cdn_frontdoor_custom_domain_association: (import 'cdn_frontdoor_custom_domain_association.libsonnet'),
  cdn_frontdoor_endpoint: (import 'cdn_frontdoor_endpoint.libsonnet'),
  cdn_frontdoor_firewall_policy: (import 'cdn_frontdoor_firewall_policy.libsonnet'),
  cdn_frontdoor_origin: (import 'cdn_frontdoor_origin.libsonnet'),
  cdn_frontdoor_origin_group: (import 'cdn_frontdoor_origin_group.libsonnet'),
  cdn_frontdoor_profile: (import 'cdn_frontdoor_profile.libsonnet'),
  cdn_frontdoor_route: (import 'cdn_frontdoor_route.libsonnet'),
  cdn_frontdoor_route_disable_link_to_default_domain: (import 'cdn_frontdoor_route_disable_link_to_default_domain.libsonnet'),
  cdn_frontdoor_rule: (import 'cdn_frontdoor_rule.libsonnet'),
  cdn_frontdoor_rule_set: (import 'cdn_frontdoor_rule_set.libsonnet'),
  cdn_frontdoor_secret: (import 'cdn_frontdoor_secret.libsonnet'),
  cdn_frontdoor_security_policy: (import 'cdn_frontdoor_security_policy.libsonnet'),
  cdn_profile: (import 'cdn_profile.libsonnet'),
  cognitive_account: (import 'cognitive_account.libsonnet'),
  cognitive_account_customer_managed_key: (import 'cognitive_account_customer_managed_key.libsonnet'),
  communication_service: (import 'communication_service.libsonnet'),
  confidential_ledger: (import 'confidential_ledger.libsonnet'),
  consumption_budget_management_group: (import 'consumption_budget_management_group.libsonnet'),
  consumption_budget_resource_group: (import 'consumption_budget_resource_group.libsonnet'),
  consumption_budget_subscription: (import 'consumption_budget_subscription.libsonnet'),
  container_connected_registry: (import 'container_connected_registry.libsonnet'),
  container_group: (import 'container_group.libsonnet'),
  container_registry: (import 'container_registry.libsonnet'),
  container_registry_agent_pool: (import 'container_registry_agent_pool.libsonnet'),
  container_registry_scope_map: (import 'container_registry_scope_map.libsonnet'),
  container_registry_task: (import 'container_registry_task.libsonnet'),
  container_registry_task_schedule_run_now: (import 'container_registry_task_schedule_run_now.libsonnet'),
  container_registry_token: (import 'container_registry_token.libsonnet'),
  container_registry_token_password: (import 'container_registry_token_password.libsonnet'),
  container_registry_webhook: (import 'container_registry_webhook.libsonnet'),
  cosmosdb_account: (import 'cosmosdb_account.libsonnet'),
  cosmosdb_cassandra_cluster: (import 'cosmosdb_cassandra_cluster.libsonnet'),
  cosmosdb_cassandra_datacenter: (import 'cosmosdb_cassandra_datacenter.libsonnet'),
  cosmosdb_cassandra_keyspace: (import 'cosmosdb_cassandra_keyspace.libsonnet'),
  cosmosdb_cassandra_table: (import 'cosmosdb_cassandra_table.libsonnet'),
  cosmosdb_gremlin_database: (import 'cosmosdb_gremlin_database.libsonnet'),
  cosmosdb_gremlin_graph: (import 'cosmosdb_gremlin_graph.libsonnet'),
  cosmosdb_mongo_collection: (import 'cosmosdb_mongo_collection.libsonnet'),
  cosmosdb_mongo_database: (import 'cosmosdb_mongo_database.libsonnet'),
  cosmosdb_notebook_workspace: (import 'cosmosdb_notebook_workspace.libsonnet'),
  cosmosdb_sql_container: (import 'cosmosdb_sql_container.libsonnet'),
  cosmosdb_sql_database: (import 'cosmosdb_sql_database.libsonnet'),
  cosmosdb_sql_dedicated_gateway: (import 'cosmosdb_sql_dedicated_gateway.libsonnet'),
  cosmosdb_sql_function: (import 'cosmosdb_sql_function.libsonnet'),
  cosmosdb_sql_role_assignment: (import 'cosmosdb_sql_role_assignment.libsonnet'),
  cosmosdb_sql_role_definition: (import 'cosmosdb_sql_role_definition.libsonnet'),
  cosmosdb_sql_stored_procedure: (import 'cosmosdb_sql_stored_procedure.libsonnet'),
  cosmosdb_sql_trigger: (import 'cosmosdb_sql_trigger.libsonnet'),
  cosmosdb_table: (import 'cosmosdb_table.libsonnet'),
  custom_provider: (import 'custom_provider.libsonnet'),
  dashboard: (import 'dashboard.libsonnet'),
  dashboard_grafana: (import 'dashboard_grafana.libsonnet'),
  data_factory: (import 'data_factory.libsonnet'),
  data_factory_custom_dataset: (import 'data_factory_custom_dataset.libsonnet'),
  data_factory_data_flow: (import 'data_factory_data_flow.libsonnet'),
  data_factory_dataset_azure_blob: (import 'data_factory_dataset_azure_blob.libsonnet'),
  data_factory_dataset_binary: (import 'data_factory_dataset_binary.libsonnet'),
  data_factory_dataset_cosmosdb_sqlapi: (import 'data_factory_dataset_cosmosdb_sqlapi.libsonnet'),
  data_factory_dataset_delimited_text: (import 'data_factory_dataset_delimited_text.libsonnet'),
  data_factory_dataset_http: (import 'data_factory_dataset_http.libsonnet'),
  data_factory_dataset_json: (import 'data_factory_dataset_json.libsonnet'),
  data_factory_dataset_mysql: (import 'data_factory_dataset_mysql.libsonnet'),
  data_factory_dataset_parquet: (import 'data_factory_dataset_parquet.libsonnet'),
  data_factory_dataset_postgresql: (import 'data_factory_dataset_postgresql.libsonnet'),
  data_factory_dataset_snowflake: (import 'data_factory_dataset_snowflake.libsonnet'),
  data_factory_dataset_sql_server_table: (import 'data_factory_dataset_sql_server_table.libsonnet'),
  data_factory_flowlet_data_flow: (import 'data_factory_flowlet_data_flow.libsonnet'),
  data_factory_integration_runtime_azure: (import 'data_factory_integration_runtime_azure.libsonnet'),
  data_factory_integration_runtime_azure_ssis: (import 'data_factory_integration_runtime_azure_ssis.libsonnet'),
  data_factory_integration_runtime_managed: (import 'data_factory_integration_runtime_managed.libsonnet'),
  data_factory_integration_runtime_self_hosted: (import 'data_factory_integration_runtime_self_hosted.libsonnet'),
  data_factory_linked_custom_service: (import 'data_factory_linked_custom_service.libsonnet'),
  data_factory_linked_service_azure_blob_storage: (import 'data_factory_linked_service_azure_blob_storage.libsonnet'),
  data_factory_linked_service_azure_databricks: (import 'data_factory_linked_service_azure_databricks.libsonnet'),
  data_factory_linked_service_azure_file_storage: (import 'data_factory_linked_service_azure_file_storage.libsonnet'),
  data_factory_linked_service_azure_function: (import 'data_factory_linked_service_azure_function.libsonnet'),
  data_factory_linked_service_azure_search: (import 'data_factory_linked_service_azure_search.libsonnet'),
  data_factory_linked_service_azure_sql_database: (import 'data_factory_linked_service_azure_sql_database.libsonnet'),
  data_factory_linked_service_azure_table_storage: (import 'data_factory_linked_service_azure_table_storage.libsonnet'),
  data_factory_linked_service_cosmosdb: (import 'data_factory_linked_service_cosmosdb.libsonnet'),
  data_factory_linked_service_cosmosdb_mongoapi: (import 'data_factory_linked_service_cosmosdb_mongoapi.libsonnet'),
  data_factory_linked_service_data_lake_storage_gen2: (import 'data_factory_linked_service_data_lake_storage_gen2.libsonnet'),
  data_factory_linked_service_key_vault: (import 'data_factory_linked_service_key_vault.libsonnet'),
  data_factory_linked_service_kusto: (import 'data_factory_linked_service_kusto.libsonnet'),
  data_factory_linked_service_mysql: (import 'data_factory_linked_service_mysql.libsonnet'),
  data_factory_linked_service_odata: (import 'data_factory_linked_service_odata.libsonnet'),
  data_factory_linked_service_odbc: (import 'data_factory_linked_service_odbc.libsonnet'),
  data_factory_linked_service_postgresql: (import 'data_factory_linked_service_postgresql.libsonnet'),
  data_factory_linked_service_sftp: (import 'data_factory_linked_service_sftp.libsonnet'),
  data_factory_linked_service_snowflake: (import 'data_factory_linked_service_snowflake.libsonnet'),
  data_factory_linked_service_sql_server: (import 'data_factory_linked_service_sql_server.libsonnet'),
  data_factory_linked_service_synapse: (import 'data_factory_linked_service_synapse.libsonnet'),
  data_factory_linked_service_web: (import 'data_factory_linked_service_web.libsonnet'),
  data_factory_managed_private_endpoint: (import 'data_factory_managed_private_endpoint.libsonnet'),
  data_factory_pipeline: (import 'data_factory_pipeline.libsonnet'),
  data_factory_trigger_blob_event: (import 'data_factory_trigger_blob_event.libsonnet'),
  data_factory_trigger_custom_event: (import 'data_factory_trigger_custom_event.libsonnet'),
  data_factory_trigger_schedule: (import 'data_factory_trigger_schedule.libsonnet'),
  data_factory_trigger_tumbling_window: (import 'data_factory_trigger_tumbling_window.libsonnet'),
  data_protection_backup_instance_blob_storage: (import 'data_protection_backup_instance_blob_storage.libsonnet'),
  data_protection_backup_instance_disk: (import 'data_protection_backup_instance_disk.libsonnet'),
  data_protection_backup_instance_postgresql: (import 'data_protection_backup_instance_postgresql.libsonnet'),
  data_protection_backup_policy_blob_storage: (import 'data_protection_backup_policy_blob_storage.libsonnet'),
  data_protection_backup_policy_disk: (import 'data_protection_backup_policy_disk.libsonnet'),
  data_protection_backup_policy_postgresql: (import 'data_protection_backup_policy_postgresql.libsonnet'),
  data_protection_backup_vault: (import 'data_protection_backup_vault.libsonnet'),
  data_protection_resource_guard: (import 'data_protection_resource_guard.libsonnet'),
  data_share: (import 'data_share.libsonnet'),
  data_share_account: (import 'data_share_account.libsonnet'),
  data_share_dataset_blob_storage: (import 'data_share_dataset_blob_storage.libsonnet'),
  data_share_dataset_data_lake_gen2: (import 'data_share_dataset_data_lake_gen2.libsonnet'),
  data_share_dataset_kusto_cluster: (import 'data_share_dataset_kusto_cluster.libsonnet'),
  data_share_dataset_kusto_database: (import 'data_share_dataset_kusto_database.libsonnet'),
  database_migration_project: (import 'database_migration_project.libsonnet'),
  database_migration_service: (import 'database_migration_service.libsonnet'),
  databox_edge_device: (import 'databox_edge_device.libsonnet'),
  databox_edge_order: (import 'databox_edge_order.libsonnet'),
  databricks_access_connector: (import 'databricks_access_connector.libsonnet'),
  databricks_workspace: (import 'databricks_workspace.libsonnet'),
  databricks_workspace_customer_managed_key: (import 'databricks_workspace_customer_managed_key.libsonnet'),
  datadog_monitor: (import 'datadog_monitor.libsonnet'),
  datadog_monitor_sso_configuration: (import 'datadog_monitor_sso_configuration.libsonnet'),
  datadog_monitor_tag_rule: (import 'datadog_monitor_tag_rule.libsonnet'),
  dedicated_hardware_security_module: (import 'dedicated_hardware_security_module.libsonnet'),
  dedicated_host: (import 'dedicated_host.libsonnet'),
  dedicated_host_group: (import 'dedicated_host_group.libsonnet'),
  dev_test_global_vm_shutdown_schedule: (import 'dev_test_global_vm_shutdown_schedule.libsonnet'),
  dev_test_lab: (import 'dev_test_lab.libsonnet'),
  dev_test_linux_virtual_machine: (import 'dev_test_linux_virtual_machine.libsonnet'),
  dev_test_policy: (import 'dev_test_policy.libsonnet'),
  dev_test_schedule: (import 'dev_test_schedule.libsonnet'),
  dev_test_virtual_network: (import 'dev_test_virtual_network.libsonnet'),
  dev_test_windows_virtual_machine: (import 'dev_test_windows_virtual_machine.libsonnet'),
  digital_twins_endpoint_eventgrid: (import 'digital_twins_endpoint_eventgrid.libsonnet'),
  digital_twins_endpoint_eventhub: (import 'digital_twins_endpoint_eventhub.libsonnet'),
  digital_twins_endpoint_servicebus: (import 'digital_twins_endpoint_servicebus.libsonnet'),
  digital_twins_instance: (import 'digital_twins_instance.libsonnet'),
  digital_twins_time_series_database_connection: (import 'digital_twins_time_series_database_connection.libsonnet'),
  disk_access: (import 'disk_access.libsonnet'),
  disk_encryption_set: (import 'disk_encryption_set.libsonnet'),
  disk_pool: (import 'disk_pool.libsonnet'),
  disk_pool_iscsi_target: (import 'disk_pool_iscsi_target.libsonnet'),
  disk_pool_iscsi_target_lun: (import 'disk_pool_iscsi_target_lun.libsonnet'),
  disk_pool_managed_disk_attachment: (import 'disk_pool_managed_disk_attachment.libsonnet'),
  dns_a_record: (import 'dns_a_record.libsonnet'),
  dns_aaaa_record: (import 'dns_aaaa_record.libsonnet'),
  dns_caa_record: (import 'dns_caa_record.libsonnet'),
  dns_cname_record: (import 'dns_cname_record.libsonnet'),
  dns_mx_record: (import 'dns_mx_record.libsonnet'),
  dns_ns_record: (import 'dns_ns_record.libsonnet'),
  dns_ptr_record: (import 'dns_ptr_record.libsonnet'),
  dns_srv_record: (import 'dns_srv_record.libsonnet'),
  dns_txt_record: (import 'dns_txt_record.libsonnet'),
  dns_zone: (import 'dns_zone.libsonnet'),
  elastic_cloud_elasticsearch: (import 'elastic_cloud_elasticsearch.libsonnet'),
  eventgrid_domain: (import 'eventgrid_domain.libsonnet'),
  eventgrid_domain_topic: (import 'eventgrid_domain_topic.libsonnet'),
  eventgrid_event_subscription: (import 'eventgrid_event_subscription.libsonnet'),
  eventgrid_system_topic: (import 'eventgrid_system_topic.libsonnet'),
  eventgrid_system_topic_event_subscription: (import 'eventgrid_system_topic_event_subscription.libsonnet'),
  eventgrid_topic: (import 'eventgrid_topic.libsonnet'),
  eventhub: (import 'eventhub.libsonnet'),
  eventhub_authorization_rule: (import 'eventhub_authorization_rule.libsonnet'),
  eventhub_cluster: (import 'eventhub_cluster.libsonnet'),
  eventhub_consumer_group: (import 'eventhub_consumer_group.libsonnet'),
  eventhub_namespace: (import 'eventhub_namespace.libsonnet'),
  eventhub_namespace_authorization_rule: (import 'eventhub_namespace_authorization_rule.libsonnet'),
  eventhub_namespace_customer_managed_key: (import 'eventhub_namespace_customer_managed_key.libsonnet'),
  eventhub_namespace_disaster_recovery_config: (import 'eventhub_namespace_disaster_recovery_config.libsonnet'),
  eventhub_namespace_schema_group: (import 'eventhub_namespace_schema_group.libsonnet'),
  express_route_circuit: (import 'express_route_circuit.libsonnet'),
  express_route_circuit_authorization: (import 'express_route_circuit_authorization.libsonnet'),
  express_route_circuit_connection: (import 'express_route_circuit_connection.libsonnet'),
  express_route_circuit_peering: (import 'express_route_circuit_peering.libsonnet'),
  express_route_connection: (import 'express_route_connection.libsonnet'),
  express_route_gateway: (import 'express_route_gateway.libsonnet'),
  express_route_port: (import 'express_route_port.libsonnet'),
  federated_identity_credential: (import 'federated_identity_credential.libsonnet'),
  firewall: (import 'firewall.libsonnet'),
  firewall_application_rule_collection: (import 'firewall_application_rule_collection.libsonnet'),
  firewall_nat_rule_collection: (import 'firewall_nat_rule_collection.libsonnet'),
  firewall_network_rule_collection: (import 'firewall_network_rule_collection.libsonnet'),
  firewall_policy: (import 'firewall_policy.libsonnet'),
  firewall_policy_rule_collection_group: (import 'firewall_policy_rule_collection_group.libsonnet'),
  fluid_relay_server: (import 'fluid_relay_server.libsonnet'),
  frontdoor: (import 'frontdoor.libsonnet'),
  frontdoor_custom_https_configuration: (import 'frontdoor_custom_https_configuration.libsonnet'),
  frontdoor_firewall_policy: (import 'frontdoor_firewall_policy.libsonnet'),
  frontdoor_rules_engine: (import 'frontdoor_rules_engine.libsonnet'),
  function_app: (import 'function_app.libsonnet'),
  function_app_active_slot: (import 'function_app_active_slot.libsonnet'),
  function_app_function: (import 'function_app_function.libsonnet'),
  function_app_hybrid_connection: (import 'function_app_hybrid_connection.libsonnet'),
  function_app_slot: (import 'function_app_slot.libsonnet'),
  gallery_application: (import 'gallery_application.libsonnet'),
  gallery_application_version: (import 'gallery_application_version.libsonnet'),
  hdinsight_hadoop_cluster: (import 'hdinsight_hadoop_cluster.libsonnet'),
  hdinsight_hbase_cluster: (import 'hdinsight_hbase_cluster.libsonnet'),
  hdinsight_interactive_query_cluster: (import 'hdinsight_interactive_query_cluster.libsonnet'),
  hdinsight_kafka_cluster: (import 'hdinsight_kafka_cluster.libsonnet'),
  hdinsight_spark_cluster: (import 'hdinsight_spark_cluster.libsonnet'),
  healthbot: (import 'healthbot.libsonnet'),
  healthcare_dicom_service: (import 'healthcare_dicom_service.libsonnet'),
  healthcare_fhir_service: (import 'healthcare_fhir_service.libsonnet'),
  healthcare_medtech_service: (import 'healthcare_medtech_service.libsonnet'),
  healthcare_medtech_service_fhir_destination: (import 'healthcare_medtech_service_fhir_destination.libsonnet'),
  healthcare_service: (import 'healthcare_service.libsonnet'),
  healthcare_workspace: (import 'healthcare_workspace.libsonnet'),
  hpc_cache: (import 'hpc_cache.libsonnet'),
  hpc_cache_access_policy: (import 'hpc_cache_access_policy.libsonnet'),
  hpc_cache_blob_nfs_target: (import 'hpc_cache_blob_nfs_target.libsonnet'),
  hpc_cache_blob_target: (import 'hpc_cache_blob_target.libsonnet'),
  hpc_cache_nfs_target: (import 'hpc_cache_nfs_target.libsonnet'),
  image: (import 'image.libsonnet'),
  integration_service_environment: (import 'integration_service_environment.libsonnet'),
  iot_security_device_group: (import 'iot_security_device_group.libsonnet'),
  iot_security_solution: (import 'iot_security_solution.libsonnet'),
  iot_time_series_insights_access_policy: (import 'iot_time_series_insights_access_policy.libsonnet'),
  iot_time_series_insights_event_source_eventhub: (import 'iot_time_series_insights_event_source_eventhub.libsonnet'),
  iot_time_series_insights_event_source_iothub: (import 'iot_time_series_insights_event_source_iothub.libsonnet'),
  iot_time_series_insights_gen2_environment: (import 'iot_time_series_insights_gen2_environment.libsonnet'),
  iot_time_series_insights_reference_data_set: (import 'iot_time_series_insights_reference_data_set.libsonnet'),
  iot_time_series_insights_standard_environment: (import 'iot_time_series_insights_standard_environment.libsonnet'),
  iotcentral_application: (import 'iotcentral_application.libsonnet'),
  iotcentral_application_network_rule_set: (import 'iotcentral_application_network_rule_set.libsonnet'),
  iothub: (import 'iothub.libsonnet'),
  iothub_certificate: (import 'iothub_certificate.libsonnet'),
  iothub_consumer_group: (import 'iothub_consumer_group.libsonnet'),
  iothub_device_update_account: (import 'iothub_device_update_account.libsonnet'),
  iothub_device_update_instance: (import 'iothub_device_update_instance.libsonnet'),
  iothub_dps: (import 'iothub_dps.libsonnet'),
  iothub_dps_certificate: (import 'iothub_dps_certificate.libsonnet'),
  iothub_dps_shared_access_policy: (import 'iothub_dps_shared_access_policy.libsonnet'),
  iothub_endpoint_eventhub: (import 'iothub_endpoint_eventhub.libsonnet'),
  iothub_endpoint_servicebus_queue: (import 'iothub_endpoint_servicebus_queue.libsonnet'),
  iothub_endpoint_servicebus_topic: (import 'iothub_endpoint_servicebus_topic.libsonnet'),
  iothub_endpoint_storage_container: (import 'iothub_endpoint_storage_container.libsonnet'),
  iothub_enrichment: (import 'iothub_enrichment.libsonnet'),
  iothub_fallback_route: (import 'iothub_fallback_route.libsonnet'),
  iothub_route: (import 'iothub_route.libsonnet'),
  iothub_shared_access_policy: (import 'iothub_shared_access_policy.libsonnet'),
  ip_group: (import 'ip_group.libsonnet'),
  key_vault: (import 'key_vault.libsonnet'),
  key_vault_access_policy: (import 'key_vault_access_policy.libsonnet'),
  key_vault_certificate: (import 'key_vault_certificate.libsonnet'),
  key_vault_certificate_issuer: (import 'key_vault_certificate_issuer.libsonnet'),
  key_vault_key: (import 'key_vault_key.libsonnet'),
  key_vault_managed_hardware_security_module: (import 'key_vault_managed_hardware_security_module.libsonnet'),
  key_vault_managed_storage_account: (import 'key_vault_managed_storage_account.libsonnet'),
  key_vault_managed_storage_account_sas_token_definition: (import 'key_vault_managed_storage_account_sas_token_definition.libsonnet'),
  key_vault_secret: (import 'key_vault_secret.libsonnet'),
  kubernetes_cluster: (import 'kubernetes_cluster.libsonnet'),
  kubernetes_cluster_node_pool: (import 'kubernetes_cluster_node_pool.libsonnet'),
  kubernetes_fleet_manager: (import 'kubernetes_fleet_manager.libsonnet'),
  kusto_attached_database_configuration: (import 'kusto_attached_database_configuration.libsonnet'),
  kusto_cluster: (import 'kusto_cluster.libsonnet'),
  kusto_cluster_customer_managed_key: (import 'kusto_cluster_customer_managed_key.libsonnet'),
  kusto_cluster_managed_private_endpoint: (import 'kusto_cluster_managed_private_endpoint.libsonnet'),
  kusto_cluster_principal_assignment: (import 'kusto_cluster_principal_assignment.libsonnet'),
  kusto_database: (import 'kusto_database.libsonnet'),
  kusto_database_principal_assignment: (import 'kusto_database_principal_assignment.libsonnet'),
  kusto_eventgrid_data_connection: (import 'kusto_eventgrid_data_connection.libsonnet'),
  kusto_eventhub_data_connection: (import 'kusto_eventhub_data_connection.libsonnet'),
  kusto_iothub_data_connection: (import 'kusto_iothub_data_connection.libsonnet'),
  kusto_script: (import 'kusto_script.libsonnet'),
  lb: (import 'lb.libsonnet'),
  lb_backend_address_pool: (import 'lb_backend_address_pool.libsonnet'),
  lb_backend_address_pool_address: (import 'lb_backend_address_pool_address.libsonnet'),
  lb_nat_pool: (import 'lb_nat_pool.libsonnet'),
  lb_nat_rule: (import 'lb_nat_rule.libsonnet'),
  lb_outbound_rule: (import 'lb_outbound_rule.libsonnet'),
  lb_probe: (import 'lb_probe.libsonnet'),
  lb_rule: (import 'lb_rule.libsonnet'),
  lighthouse_assignment: (import 'lighthouse_assignment.libsonnet'),
  lighthouse_definition: (import 'lighthouse_definition.libsonnet'),
  linux_function_app: (import 'linux_function_app.libsonnet'),
  linux_function_app_slot: (import 'linux_function_app_slot.libsonnet'),
  linux_virtual_machine: (import 'linux_virtual_machine.libsonnet'),
  linux_virtual_machine_scale_set: (import 'linux_virtual_machine_scale_set.libsonnet'),
  linux_web_app: (import 'linux_web_app.libsonnet'),
  linux_web_app_slot: (import 'linux_web_app_slot.libsonnet'),
  load_test: (import 'load_test.libsonnet'),
  local_network_gateway: (import 'local_network_gateway.libsonnet'),
  log_analytics_cluster: (import 'log_analytics_cluster.libsonnet'),
  log_analytics_cluster_customer_managed_key: (import 'log_analytics_cluster_customer_managed_key.libsonnet'),
  log_analytics_data_export_rule: (import 'log_analytics_data_export_rule.libsonnet'),
  log_analytics_datasource_windows_event: (import 'log_analytics_datasource_windows_event.libsonnet'),
  log_analytics_datasource_windows_performance_counter: (import 'log_analytics_datasource_windows_performance_counter.libsonnet'),
  log_analytics_linked_service: (import 'log_analytics_linked_service.libsonnet'),
  log_analytics_linked_storage_account: (import 'log_analytics_linked_storage_account.libsonnet'),
  log_analytics_query_pack: (import 'log_analytics_query_pack.libsonnet'),
  log_analytics_query_pack_query: (import 'log_analytics_query_pack_query.libsonnet'),
  log_analytics_saved_search: (import 'log_analytics_saved_search.libsonnet'),
  log_analytics_solution: (import 'log_analytics_solution.libsonnet'),
  log_analytics_storage_insights: (import 'log_analytics_storage_insights.libsonnet'),
  log_analytics_workspace: (import 'log_analytics_workspace.libsonnet'),
  logic_app_action_custom: (import 'logic_app_action_custom.libsonnet'),
  logic_app_action_http: (import 'logic_app_action_http.libsonnet'),
  logic_app_integration_account: (import 'logic_app_integration_account.libsonnet'),
  logic_app_integration_account_agreement: (import 'logic_app_integration_account_agreement.libsonnet'),
  logic_app_integration_account_assembly: (import 'logic_app_integration_account_assembly.libsonnet'),
  logic_app_integration_account_batch_configuration: (import 'logic_app_integration_account_batch_configuration.libsonnet'),
  logic_app_integration_account_certificate: (import 'logic_app_integration_account_certificate.libsonnet'),
  logic_app_integration_account_map: (import 'logic_app_integration_account_map.libsonnet'),
  logic_app_integration_account_partner: (import 'logic_app_integration_account_partner.libsonnet'),
  logic_app_integration_account_schema: (import 'logic_app_integration_account_schema.libsonnet'),
  logic_app_integration_account_session: (import 'logic_app_integration_account_session.libsonnet'),
  logic_app_standard: (import 'logic_app_standard.libsonnet'),
  logic_app_trigger_custom: (import 'logic_app_trigger_custom.libsonnet'),
  logic_app_trigger_http_request: (import 'logic_app_trigger_http_request.libsonnet'),
  logic_app_trigger_recurrence: (import 'logic_app_trigger_recurrence.libsonnet'),
  logic_app_workflow: (import 'logic_app_workflow.libsonnet'),
  logz_monitor: (import 'logz_monitor.libsonnet'),
  logz_sub_account: (import 'logz_sub_account.libsonnet'),
  logz_sub_account_tag_rule: (import 'logz_sub_account_tag_rule.libsonnet'),
  logz_tag_rule: (import 'logz_tag_rule.libsonnet'),
  machine_learning_compute_cluster: (import 'machine_learning_compute_cluster.libsonnet'),
  machine_learning_compute_instance: (import 'machine_learning_compute_instance.libsonnet'),
  machine_learning_inference_cluster: (import 'machine_learning_inference_cluster.libsonnet'),
  machine_learning_synapse_spark: (import 'machine_learning_synapse_spark.libsonnet'),
  machine_learning_workspace: (import 'machine_learning_workspace.libsonnet'),
  maintenance_assignment_dedicated_host: (import 'maintenance_assignment_dedicated_host.libsonnet'),
  maintenance_assignment_virtual_machine: (import 'maintenance_assignment_virtual_machine.libsonnet'),
  maintenance_assignment_virtual_machine_scale_set: (import 'maintenance_assignment_virtual_machine_scale_set.libsonnet'),
  maintenance_configuration: (import 'maintenance_configuration.libsonnet'),
  managed_application: (import 'managed_application.libsonnet'),
  managed_application_definition: (import 'managed_application_definition.libsonnet'),
  managed_disk: (import 'managed_disk.libsonnet'),
  managed_disk_sas_token: (import 'managed_disk_sas_token.libsonnet'),
  management_group: (import 'management_group.libsonnet'),
  management_group_policy_assignment: (import 'management_group_policy_assignment.libsonnet'),
  management_group_policy_exemption: (import 'management_group_policy_exemption.libsonnet'),
  management_group_policy_remediation: (import 'management_group_policy_remediation.libsonnet'),
  management_group_subscription_association: (import 'management_group_subscription_association.libsonnet'),
  management_group_template_deployment: (import 'management_group_template_deployment.libsonnet'),
  management_lock: (import 'management_lock.libsonnet'),
  maps_account: (import 'maps_account.libsonnet'),
  maps_creator: (import 'maps_creator.libsonnet'),
  mariadb_configuration: (import 'mariadb_configuration.libsonnet'),
  mariadb_database: (import 'mariadb_database.libsonnet'),
  mariadb_firewall_rule: (import 'mariadb_firewall_rule.libsonnet'),
  mariadb_server: (import 'mariadb_server.libsonnet'),
  mariadb_virtual_network_rule: (import 'mariadb_virtual_network_rule.libsonnet'),
  marketplace_agreement: (import 'marketplace_agreement.libsonnet'),
  media_asset: (import 'media_asset.libsonnet'),
  media_asset_filter: (import 'media_asset_filter.libsonnet'),
  media_content_key_policy: (import 'media_content_key_policy.libsonnet'),
  media_job: (import 'media_job.libsonnet'),
  media_live_event: (import 'media_live_event.libsonnet'),
  media_live_event_output: (import 'media_live_event_output.libsonnet'),
  media_services_account: (import 'media_services_account.libsonnet'),
  media_streaming_endpoint: (import 'media_streaming_endpoint.libsonnet'),
  media_streaming_locator: (import 'media_streaming_locator.libsonnet'),
  media_streaming_policy: (import 'media_streaming_policy.libsonnet'),
  media_transform: (import 'media_transform.libsonnet'),
  monitor_aad_diagnostic_setting: (import 'monitor_aad_diagnostic_setting.libsonnet'),
  monitor_action_group: (import 'monitor_action_group.libsonnet'),
  monitor_action_rule_action_group: (import 'monitor_action_rule_action_group.libsonnet'),
  monitor_action_rule_suppression: (import 'monitor_action_rule_suppression.libsonnet'),
  monitor_activity_log_alert: (import 'monitor_activity_log_alert.libsonnet'),
  monitor_alert_processing_rule_action_group: (import 'monitor_alert_processing_rule_action_group.libsonnet'),
  monitor_alert_processing_rule_suppression: (import 'monitor_alert_processing_rule_suppression.libsonnet'),
  monitor_autoscale_setting: (import 'monitor_autoscale_setting.libsonnet'),
  monitor_data_collection_endpoint: (import 'monitor_data_collection_endpoint.libsonnet'),
  monitor_data_collection_rule: (import 'monitor_data_collection_rule.libsonnet'),
  monitor_data_collection_rule_association: (import 'monitor_data_collection_rule_association.libsonnet'),
  monitor_diagnostic_setting: (import 'monitor_diagnostic_setting.libsonnet'),
  monitor_log_profile: (import 'monitor_log_profile.libsonnet'),
  monitor_metric_alert: (import 'monitor_metric_alert.libsonnet'),
  monitor_private_link_scope: (import 'monitor_private_link_scope.libsonnet'),
  monitor_private_link_scoped_service: (import 'monitor_private_link_scoped_service.libsonnet'),
  monitor_scheduled_query_rules_alert: (import 'monitor_scheduled_query_rules_alert.libsonnet'),
  monitor_scheduled_query_rules_alert_v2: (import 'monitor_scheduled_query_rules_alert_v2.libsonnet'),
  monitor_scheduled_query_rules_log: (import 'monitor_scheduled_query_rules_log.libsonnet'),
  monitor_smart_detector_alert_rule: (import 'monitor_smart_detector_alert_rule.libsonnet'),
  mssql_database: (import 'mssql_database.libsonnet'),
  mssql_database_extended_auditing_policy: (import 'mssql_database_extended_auditing_policy.libsonnet'),
  mssql_database_vulnerability_assessment_rule_baseline: (import 'mssql_database_vulnerability_assessment_rule_baseline.libsonnet'),
  mssql_elasticpool: (import 'mssql_elasticpool.libsonnet'),
  mssql_failover_group: (import 'mssql_failover_group.libsonnet'),
  mssql_firewall_rule: (import 'mssql_firewall_rule.libsonnet'),
  mssql_job_agent: (import 'mssql_job_agent.libsonnet'),
  mssql_job_credential: (import 'mssql_job_credential.libsonnet'),
  mssql_managed_database: (import 'mssql_managed_database.libsonnet'),
  mssql_managed_instance: (import 'mssql_managed_instance.libsonnet'),
  mssql_managed_instance_active_directory_administrator: (import 'mssql_managed_instance_active_directory_administrator.libsonnet'),
  mssql_managed_instance_failover_group: (import 'mssql_managed_instance_failover_group.libsonnet'),
  mssql_managed_instance_security_alert_policy: (import 'mssql_managed_instance_security_alert_policy.libsonnet'),
  mssql_managed_instance_transparent_data_encryption: (import 'mssql_managed_instance_transparent_data_encryption.libsonnet'),
  mssql_managed_instance_vulnerability_assessment: (import 'mssql_managed_instance_vulnerability_assessment.libsonnet'),
  mssql_outbound_firewall_rule: (import 'mssql_outbound_firewall_rule.libsonnet'),
  mssql_server: (import 'mssql_server.libsonnet'),
  mssql_server_dns_alias: (import 'mssql_server_dns_alias.libsonnet'),
  mssql_server_extended_auditing_policy: (import 'mssql_server_extended_auditing_policy.libsonnet'),
  mssql_server_microsoft_support_auditing_policy: (import 'mssql_server_microsoft_support_auditing_policy.libsonnet'),
  mssql_server_security_alert_policy: (import 'mssql_server_security_alert_policy.libsonnet'),
  mssql_server_transparent_data_encryption: (import 'mssql_server_transparent_data_encryption.libsonnet'),
  mssql_server_vulnerability_assessment: (import 'mssql_server_vulnerability_assessment.libsonnet'),
  mssql_virtual_machine: (import 'mssql_virtual_machine.libsonnet'),
  mssql_virtual_network_rule: (import 'mssql_virtual_network_rule.libsonnet'),
  mysql_active_directory_administrator: (import 'mysql_active_directory_administrator.libsonnet'),
  mysql_configuration: (import 'mysql_configuration.libsonnet'),
  mysql_database: (import 'mysql_database.libsonnet'),
  mysql_firewall_rule: (import 'mysql_firewall_rule.libsonnet'),
  mysql_flexible_database: (import 'mysql_flexible_database.libsonnet'),
  mysql_flexible_server: (import 'mysql_flexible_server.libsonnet'),
  mysql_flexible_server_configuration: (import 'mysql_flexible_server_configuration.libsonnet'),
  mysql_flexible_server_firewall_rule: (import 'mysql_flexible_server_firewall_rule.libsonnet'),
  mysql_server: (import 'mysql_server.libsonnet'),
  mysql_server_key: (import 'mysql_server_key.libsonnet'),
  mysql_virtual_network_rule: (import 'mysql_virtual_network_rule.libsonnet'),
  nat_gateway: (import 'nat_gateway.libsonnet'),
  nat_gateway_public_ip_association: (import 'nat_gateway_public_ip_association.libsonnet'),
  nat_gateway_public_ip_prefix_association: (import 'nat_gateway_public_ip_prefix_association.libsonnet'),
  netapp_account: (import 'netapp_account.libsonnet'),
  netapp_pool: (import 'netapp_pool.libsonnet'),
  netapp_snapshot: (import 'netapp_snapshot.libsonnet'),
  netapp_snapshot_policy: (import 'netapp_snapshot_policy.libsonnet'),
  netapp_volume: (import 'netapp_volume.libsonnet'),
  network_connection_monitor: (import 'network_connection_monitor.libsonnet'),
  network_ddos_protection_plan: (import 'network_ddos_protection_plan.libsonnet'),
  network_interface: (import 'network_interface.libsonnet'),
  network_interface_application_gateway_backend_address_pool_association: (import 'network_interface_application_gateway_backend_address_pool_association.libsonnet'),
  network_interface_application_security_group_association: (import 'network_interface_application_security_group_association.libsonnet'),
  network_interface_backend_address_pool_association: (import 'network_interface_backend_address_pool_association.libsonnet'),
  network_interface_nat_rule_association: (import 'network_interface_nat_rule_association.libsonnet'),
  network_interface_security_group_association: (import 'network_interface_security_group_association.libsonnet'),
  network_manager: (import 'network_manager.libsonnet'),
  network_packet_capture: (import 'network_packet_capture.libsonnet'),
  network_profile: (import 'network_profile.libsonnet'),
  network_security_group: (import 'network_security_group.libsonnet'),
  network_security_rule: (import 'network_security_rule.libsonnet'),
  network_watcher: (import 'network_watcher.libsonnet'),
  network_watcher_flow_log: (import 'network_watcher_flow_log.libsonnet'),
  nginx_certificate: (import 'nginx_certificate.libsonnet'),
  nginx_configuration: (import 'nginx_configuration.libsonnet'),
  nginx_deployment: (import 'nginx_deployment.libsonnet'),
  notification_hub: (import 'notification_hub.libsonnet'),
  notification_hub_authorization_rule: (import 'notification_hub_authorization_rule.libsonnet'),
  notification_hub_namespace: (import 'notification_hub_namespace.libsonnet'),
  orbital_contact_profile: (import 'orbital_contact_profile.libsonnet'),
  orbital_spacecraft: (import 'orbital_spacecraft.libsonnet'),
  orchestrated_virtual_machine_scale_set: (import 'orchestrated_virtual_machine_scale_set.libsonnet'),
  point_to_site_vpn_gateway: (import 'point_to_site_vpn_gateway.libsonnet'),
  policy_definition: (import 'policy_definition.libsonnet'),
  policy_set_definition: (import 'policy_set_definition.libsonnet'),
  policy_virtual_machine_configuration_assignment: (import 'policy_virtual_machine_configuration_assignment.libsonnet'),
  portal_dashboard: (import 'portal_dashboard.libsonnet'),
  portal_tenant_configuration: (import 'portal_tenant_configuration.libsonnet'),
  postgresql_active_directory_administrator: (import 'postgresql_active_directory_administrator.libsonnet'),
  postgresql_configuration: (import 'postgresql_configuration.libsonnet'),
  postgresql_database: (import 'postgresql_database.libsonnet'),
  postgresql_firewall_rule: (import 'postgresql_firewall_rule.libsonnet'),
  postgresql_flexible_server: (import 'postgresql_flexible_server.libsonnet'),
  postgresql_flexible_server_active_directory_administrator: (import 'postgresql_flexible_server_active_directory_administrator.libsonnet'),
  postgresql_flexible_server_configuration: (import 'postgresql_flexible_server_configuration.libsonnet'),
  postgresql_flexible_server_database: (import 'postgresql_flexible_server_database.libsonnet'),
  postgresql_flexible_server_firewall_rule: (import 'postgresql_flexible_server_firewall_rule.libsonnet'),
  postgresql_server: (import 'postgresql_server.libsonnet'),
  postgresql_server_key: (import 'postgresql_server_key.libsonnet'),
  postgresql_virtual_network_rule: (import 'postgresql_virtual_network_rule.libsonnet'),
  powerbi_embedded: (import 'powerbi_embedded.libsonnet'),
  private_dns_a_record: (import 'private_dns_a_record.libsonnet'),
  private_dns_aaaa_record: (import 'private_dns_aaaa_record.libsonnet'),
  private_dns_cname_record: (import 'private_dns_cname_record.libsonnet'),
  private_dns_mx_record: (import 'private_dns_mx_record.libsonnet'),
  private_dns_ptr_record: (import 'private_dns_ptr_record.libsonnet'),
  private_dns_resolver: (import 'private_dns_resolver.libsonnet'),
  private_dns_resolver_dns_forwarding_ruleset: (import 'private_dns_resolver_dns_forwarding_ruleset.libsonnet'),
  private_dns_resolver_forwarding_rule: (import 'private_dns_resolver_forwarding_rule.libsonnet'),
  private_dns_resolver_inbound_endpoint: (import 'private_dns_resolver_inbound_endpoint.libsonnet'),
  private_dns_resolver_outbound_endpoint: (import 'private_dns_resolver_outbound_endpoint.libsonnet'),
  private_dns_resolver_virtual_network_link: (import 'private_dns_resolver_virtual_network_link.libsonnet'),
  private_dns_srv_record: (import 'private_dns_srv_record.libsonnet'),
  private_dns_txt_record: (import 'private_dns_txt_record.libsonnet'),
  private_dns_zone: (import 'private_dns_zone.libsonnet'),
  private_dns_zone_virtual_network_link: (import 'private_dns_zone_virtual_network_link.libsonnet'),
  private_endpoint: (import 'private_endpoint.libsonnet'),
  private_link_service: (import 'private_link_service.libsonnet'),
  proximity_placement_group: (import 'proximity_placement_group.libsonnet'),
  public_ip: (import 'public_ip.libsonnet'),
  public_ip_prefix: (import 'public_ip_prefix.libsonnet'),
  purview_account: (import 'purview_account.libsonnet'),
  recovery_services_vault: (import 'recovery_services_vault.libsonnet'),
  redis_cache: (import 'redis_cache.libsonnet'),
  redis_enterprise_cluster: (import 'redis_enterprise_cluster.libsonnet'),
  redis_enterprise_database: (import 'redis_enterprise_database.libsonnet'),
  redis_firewall_rule: (import 'redis_firewall_rule.libsonnet'),
  redis_linked_server: (import 'redis_linked_server.libsonnet'),
  relay_hybrid_connection: (import 'relay_hybrid_connection.libsonnet'),
  relay_hybrid_connection_authorization_rule: (import 'relay_hybrid_connection_authorization_rule.libsonnet'),
  relay_namespace: (import 'relay_namespace.libsonnet'),
  relay_namespace_authorization_rule: (import 'relay_namespace_authorization_rule.libsonnet'),
  resource_group: (import 'resource_group.libsonnet'),
  resource_group_cost_management_export: (import 'resource_group_cost_management_export.libsonnet'),
  resource_group_policy_assignment: (import 'resource_group_policy_assignment.libsonnet'),
  resource_group_policy_exemption: (import 'resource_group_policy_exemption.libsonnet'),
  resource_group_policy_remediation: (import 'resource_group_policy_remediation.libsonnet'),
  resource_group_template_deployment: (import 'resource_group_template_deployment.libsonnet'),
  resource_policy_assignment: (import 'resource_policy_assignment.libsonnet'),
  resource_policy_exemption: (import 'resource_policy_exemption.libsonnet'),
  resource_policy_remediation: (import 'resource_policy_remediation.libsonnet'),
  resource_provider_registration: (import 'resource_provider_registration.libsonnet'),
  role_assignment: (import 'role_assignment.libsonnet'),
  role_definition: (import 'role_definition.libsonnet'),
  route: (import 'route.libsonnet'),
  route_filter: (import 'route_filter.libsonnet'),
  route_map: (import 'route_map.libsonnet'),
  route_server: (import 'route_server.libsonnet'),
  route_server_bgp_connection: (import 'route_server_bgp_connection.libsonnet'),
  route_table: (import 'route_table.libsonnet'),
  search_service: (import 'search_service.libsonnet'),
  search_shared_private_link_service: (import 'search_shared_private_link_service.libsonnet'),
  security_center_assessment: (import 'security_center_assessment.libsonnet'),
  security_center_assessment_policy: (import 'security_center_assessment_policy.libsonnet'),
  security_center_auto_provisioning: (import 'security_center_auto_provisioning.libsonnet'),
  security_center_automation: (import 'security_center_automation.libsonnet'),
  security_center_contact: (import 'security_center_contact.libsonnet'),
  security_center_server_vulnerability_assessment: (import 'security_center_server_vulnerability_assessment.libsonnet'),
  security_center_server_vulnerability_assessment_virtual_machine: (import 'security_center_server_vulnerability_assessment_virtual_machine.libsonnet'),
  security_center_setting: (import 'security_center_setting.libsonnet'),
  security_center_subscription_pricing: (import 'security_center_subscription_pricing.libsonnet'),
  security_center_workspace: (import 'security_center_workspace.libsonnet'),
  sentinel_alert_rule_fusion: (import 'sentinel_alert_rule_fusion.libsonnet'),
  sentinel_alert_rule_machine_learning_behavior_analytics: (import 'sentinel_alert_rule_machine_learning_behavior_analytics.libsonnet'),
  sentinel_alert_rule_ms_security_incident: (import 'sentinel_alert_rule_ms_security_incident.libsonnet'),
  sentinel_alert_rule_nrt: (import 'sentinel_alert_rule_nrt.libsonnet'),
  sentinel_alert_rule_scheduled: (import 'sentinel_alert_rule_scheduled.libsonnet'),
  sentinel_automation_rule: (import 'sentinel_automation_rule.libsonnet'),
  sentinel_data_connector_aws_cloud_trail: (import 'sentinel_data_connector_aws_cloud_trail.libsonnet'),
  sentinel_data_connector_aws_s3: (import 'sentinel_data_connector_aws_s3.libsonnet'),
  sentinel_data_connector_azure_active_directory: (import 'sentinel_data_connector_azure_active_directory.libsonnet'),
  sentinel_data_connector_azure_advanced_threat_protection: (import 'sentinel_data_connector_azure_advanced_threat_protection.libsonnet'),
  sentinel_data_connector_azure_security_center: (import 'sentinel_data_connector_azure_security_center.libsonnet'),
  sentinel_data_connector_dynamics_365: (import 'sentinel_data_connector_dynamics_365.libsonnet'),
  sentinel_data_connector_iot: (import 'sentinel_data_connector_iot.libsonnet'),
  sentinel_data_connector_microsoft_cloud_app_security: (import 'sentinel_data_connector_microsoft_cloud_app_security.libsonnet'),
  sentinel_data_connector_microsoft_defender_advanced_threat_protection: (import 'sentinel_data_connector_microsoft_defender_advanced_threat_protection.libsonnet'),
  sentinel_data_connector_microsoft_threat_protection: (import 'sentinel_data_connector_microsoft_threat_protection.libsonnet'),
  sentinel_data_connector_office_365: (import 'sentinel_data_connector_office_365.libsonnet'),
  sentinel_data_connector_office_365_project: (import 'sentinel_data_connector_office_365_project.libsonnet'),
  sentinel_data_connector_office_atp: (import 'sentinel_data_connector_office_atp.libsonnet'),
  sentinel_data_connector_office_irm: (import 'sentinel_data_connector_office_irm.libsonnet'),
  sentinel_data_connector_office_power_bi: (import 'sentinel_data_connector_office_power_bi.libsonnet'),
  sentinel_data_connector_threat_intelligence: (import 'sentinel_data_connector_threat_intelligence.libsonnet'),
  sentinel_watchlist: (import 'sentinel_watchlist.libsonnet'),
  sentinel_watchlist_item: (import 'sentinel_watchlist_item.libsonnet'),
  service_fabric_cluster: (import 'service_fabric_cluster.libsonnet'),
  service_fabric_managed_cluster: (import 'service_fabric_managed_cluster.libsonnet'),
  service_plan: (import 'service_plan.libsonnet'),
  servicebus_namespace: (import 'servicebus_namespace.libsonnet'),
  servicebus_namespace_authorization_rule: (import 'servicebus_namespace_authorization_rule.libsonnet'),
  servicebus_namespace_disaster_recovery_config: (import 'servicebus_namespace_disaster_recovery_config.libsonnet'),
  servicebus_namespace_network_rule_set: (import 'servicebus_namespace_network_rule_set.libsonnet'),
  servicebus_queue: (import 'servicebus_queue.libsonnet'),
  servicebus_queue_authorization_rule: (import 'servicebus_queue_authorization_rule.libsonnet'),
  servicebus_subscription: (import 'servicebus_subscription.libsonnet'),
  servicebus_subscription_rule: (import 'servicebus_subscription_rule.libsonnet'),
  servicebus_topic: (import 'servicebus_topic.libsonnet'),
  servicebus_topic_authorization_rule: (import 'servicebus_topic_authorization_rule.libsonnet'),
  shared_image: (import 'shared_image.libsonnet'),
  shared_image_gallery: (import 'shared_image_gallery.libsonnet'),
  shared_image_version: (import 'shared_image_version.libsonnet'),
  signalr_service: (import 'signalr_service.libsonnet'),
  signalr_service_network_acl: (import 'signalr_service_network_acl.libsonnet'),
  signalr_shared_private_link_resource: (import 'signalr_shared_private_link_resource.libsonnet'),
  site_recovery_fabric: (import 'site_recovery_fabric.libsonnet'),
  site_recovery_network_mapping: (import 'site_recovery_network_mapping.libsonnet'),
  site_recovery_protection_container: (import 'site_recovery_protection_container.libsonnet'),
  site_recovery_protection_container_mapping: (import 'site_recovery_protection_container_mapping.libsonnet'),
  site_recovery_replicated_vm: (import 'site_recovery_replicated_vm.libsonnet'),
  site_recovery_replication_policy: (import 'site_recovery_replication_policy.libsonnet'),
  snapshot: (import 'snapshot.libsonnet'),
  source_control_token: (import 'source_control_token.libsonnet'),
  spatial_anchors_account: (import 'spatial_anchors_account.libsonnet'),
  spring_cloud_accelerator: (import 'spring_cloud_accelerator.libsonnet'),
  spring_cloud_active_deployment: (import 'spring_cloud_active_deployment.libsonnet'),
  spring_cloud_api_portal: (import 'spring_cloud_api_portal.libsonnet'),
  spring_cloud_api_portal_custom_domain: (import 'spring_cloud_api_portal_custom_domain.libsonnet'),
  spring_cloud_app: (import 'spring_cloud_app.libsonnet'),
  spring_cloud_app_cosmosdb_association: (import 'spring_cloud_app_cosmosdb_association.libsonnet'),
  spring_cloud_app_mysql_association: (import 'spring_cloud_app_mysql_association.libsonnet'),
  spring_cloud_app_redis_association: (import 'spring_cloud_app_redis_association.libsonnet'),
  spring_cloud_application_live_view: (import 'spring_cloud_application_live_view.libsonnet'),
  spring_cloud_build_deployment: (import 'spring_cloud_build_deployment.libsonnet'),
  spring_cloud_build_pack_binding: (import 'spring_cloud_build_pack_binding.libsonnet'),
  spring_cloud_builder: (import 'spring_cloud_builder.libsonnet'),
  spring_cloud_certificate: (import 'spring_cloud_certificate.libsonnet'),
  spring_cloud_configuration_service: (import 'spring_cloud_configuration_service.libsonnet'),
  spring_cloud_connection: (import 'spring_cloud_connection.libsonnet'),
  spring_cloud_container_deployment: (import 'spring_cloud_container_deployment.libsonnet'),
  spring_cloud_custom_domain: (import 'spring_cloud_custom_domain.libsonnet'),
  spring_cloud_dev_tool_portal: (import 'spring_cloud_dev_tool_portal.libsonnet'),
  spring_cloud_gateway: (import 'spring_cloud_gateway.libsonnet'),
  spring_cloud_gateway_custom_domain: (import 'spring_cloud_gateway_custom_domain.libsonnet'),
  spring_cloud_gateway_route_config: (import 'spring_cloud_gateway_route_config.libsonnet'),
  spring_cloud_java_deployment: (import 'spring_cloud_java_deployment.libsonnet'),
  spring_cloud_service: (import 'spring_cloud_service.libsonnet'),
  spring_cloud_storage: (import 'spring_cloud_storage.libsonnet'),
  sql_active_directory_administrator: (import 'sql_active_directory_administrator.libsonnet'),
  sql_database: (import 'sql_database.libsonnet'),
  sql_elasticpool: (import 'sql_elasticpool.libsonnet'),
  sql_failover_group: (import 'sql_failover_group.libsonnet'),
  sql_firewall_rule: (import 'sql_firewall_rule.libsonnet'),
  sql_managed_database: (import 'sql_managed_database.libsonnet'),
  sql_managed_instance: (import 'sql_managed_instance.libsonnet'),
  sql_managed_instance_active_directory_administrator: (import 'sql_managed_instance_active_directory_administrator.libsonnet'),
  sql_managed_instance_failover_group: (import 'sql_managed_instance_failover_group.libsonnet'),
  sql_server: (import 'sql_server.libsonnet'),
  sql_virtual_network_rule: (import 'sql_virtual_network_rule.libsonnet'),
  ssh_public_key: (import 'ssh_public_key.libsonnet'),
  stack_hci_cluster: (import 'stack_hci_cluster.libsonnet'),
  static_site: (import 'static_site.libsonnet'),
  static_site_custom_domain: (import 'static_site_custom_domain.libsonnet'),
  storage_account: (import 'storage_account.libsonnet'),
  storage_account_customer_managed_key: (import 'storage_account_customer_managed_key.libsonnet'),
  storage_account_network_rules: (import 'storage_account_network_rules.libsonnet'),
  storage_blob: (import 'storage_blob.libsonnet'),
  storage_blob_inventory_policy: (import 'storage_blob_inventory_policy.libsonnet'),
  storage_container: (import 'storage_container.libsonnet'),
  storage_data_lake_gen2_filesystem: (import 'storage_data_lake_gen2_filesystem.libsonnet'),
  storage_data_lake_gen2_path: (import 'storage_data_lake_gen2_path.libsonnet'),
  storage_encryption_scope: (import 'storage_encryption_scope.libsonnet'),
  storage_management_policy: (import 'storage_management_policy.libsonnet'),
  storage_object_replication: (import 'storage_object_replication.libsonnet'),
  storage_queue: (import 'storage_queue.libsonnet'),
  storage_share: (import 'storage_share.libsonnet'),
  storage_share_directory: (import 'storage_share_directory.libsonnet'),
  storage_share_file: (import 'storage_share_file.libsonnet'),
  storage_sync: (import 'storage_sync.libsonnet'),
  storage_sync_cloud_endpoint: (import 'storage_sync_cloud_endpoint.libsonnet'),
  storage_sync_group: (import 'storage_sync_group.libsonnet'),
  storage_table: (import 'storage_table.libsonnet'),
  storage_table_entity: (import 'storage_table_entity.libsonnet'),
  stream_analytics_cluster: (import 'stream_analytics_cluster.libsonnet'),
  stream_analytics_function_javascript_uda: (import 'stream_analytics_function_javascript_uda.libsonnet'),
  stream_analytics_function_javascript_udf: (import 'stream_analytics_function_javascript_udf.libsonnet'),
  stream_analytics_job: (import 'stream_analytics_job.libsonnet'),
  stream_analytics_job_schedule: (import 'stream_analytics_job_schedule.libsonnet'),
  stream_analytics_managed_private_endpoint: (import 'stream_analytics_managed_private_endpoint.libsonnet'),
  stream_analytics_output_blob: (import 'stream_analytics_output_blob.libsonnet'),
  stream_analytics_output_cosmosdb: (import 'stream_analytics_output_cosmosdb.libsonnet'),
  stream_analytics_output_eventhub: (import 'stream_analytics_output_eventhub.libsonnet'),
  stream_analytics_output_function: (import 'stream_analytics_output_function.libsonnet'),
  stream_analytics_output_mssql: (import 'stream_analytics_output_mssql.libsonnet'),
  stream_analytics_output_powerbi: (import 'stream_analytics_output_powerbi.libsonnet'),
  stream_analytics_output_servicebus_queue: (import 'stream_analytics_output_servicebus_queue.libsonnet'),
  stream_analytics_output_servicebus_topic: (import 'stream_analytics_output_servicebus_topic.libsonnet'),
  stream_analytics_output_synapse: (import 'stream_analytics_output_synapse.libsonnet'),
  stream_analytics_output_table: (import 'stream_analytics_output_table.libsonnet'),
  stream_analytics_reference_input_blob: (import 'stream_analytics_reference_input_blob.libsonnet'),
  stream_analytics_reference_input_mssql: (import 'stream_analytics_reference_input_mssql.libsonnet'),
  stream_analytics_stream_input_blob: (import 'stream_analytics_stream_input_blob.libsonnet'),
  stream_analytics_stream_input_eventhub: (import 'stream_analytics_stream_input_eventhub.libsonnet'),
  stream_analytics_stream_input_eventhub_v2: (import 'stream_analytics_stream_input_eventhub_v2.libsonnet'),
  stream_analytics_stream_input_iothub: (import 'stream_analytics_stream_input_iothub.libsonnet'),
  subnet: (import 'subnet.libsonnet'),
  subnet_nat_gateway_association: (import 'subnet_nat_gateway_association.libsonnet'),
  subnet_network_security_group_association: (import 'subnet_network_security_group_association.libsonnet'),
  subnet_route_table_association: (import 'subnet_route_table_association.libsonnet'),
  subnet_service_endpoint_storage_policy: (import 'subnet_service_endpoint_storage_policy.libsonnet'),
  subscription: (import 'subscription.libsonnet'),
  subscription_cost_management_export: (import 'subscription_cost_management_export.libsonnet'),
  subscription_policy_assignment: (import 'subscription_policy_assignment.libsonnet'),
  subscription_policy_exemption: (import 'subscription_policy_exemption.libsonnet'),
  subscription_policy_remediation: (import 'subscription_policy_remediation.libsonnet'),
  subscription_template_deployment: (import 'subscription_template_deployment.libsonnet'),
  synapse_firewall_rule: (import 'synapse_firewall_rule.libsonnet'),
  synapse_integration_runtime_azure: (import 'synapse_integration_runtime_azure.libsonnet'),
  synapse_integration_runtime_self_hosted: (import 'synapse_integration_runtime_self_hosted.libsonnet'),
  synapse_linked_service: (import 'synapse_linked_service.libsonnet'),
  synapse_managed_private_endpoint: (import 'synapse_managed_private_endpoint.libsonnet'),
  synapse_private_link_hub: (import 'synapse_private_link_hub.libsonnet'),
  synapse_role_assignment: (import 'synapse_role_assignment.libsonnet'),
  synapse_spark_pool: (import 'synapse_spark_pool.libsonnet'),
  synapse_sql_pool: (import 'synapse_sql_pool.libsonnet'),
  synapse_sql_pool_extended_auditing_policy: (import 'synapse_sql_pool_extended_auditing_policy.libsonnet'),
  synapse_sql_pool_security_alert_policy: (import 'synapse_sql_pool_security_alert_policy.libsonnet'),
  synapse_sql_pool_vulnerability_assessment: (import 'synapse_sql_pool_vulnerability_assessment.libsonnet'),
  synapse_sql_pool_vulnerability_assessment_baseline: (import 'synapse_sql_pool_vulnerability_assessment_baseline.libsonnet'),
  synapse_sql_pool_workload_classifier: (import 'synapse_sql_pool_workload_classifier.libsonnet'),
  synapse_sql_pool_workload_group: (import 'synapse_sql_pool_workload_group.libsonnet'),
  synapse_workspace: (import 'synapse_workspace.libsonnet'),
  synapse_workspace_aad_admin: (import 'synapse_workspace_aad_admin.libsonnet'),
  synapse_workspace_extended_auditing_policy: (import 'synapse_workspace_extended_auditing_policy.libsonnet'),
  synapse_workspace_key: (import 'synapse_workspace_key.libsonnet'),
  synapse_workspace_security_alert_policy: (import 'synapse_workspace_security_alert_policy.libsonnet'),
  synapse_workspace_sql_aad_admin: (import 'synapse_workspace_sql_aad_admin.libsonnet'),
  synapse_workspace_vulnerability_assessment: (import 'synapse_workspace_vulnerability_assessment.libsonnet'),
  template_deployment: (import 'template_deployment.libsonnet'),
  tenant_template_deployment: (import 'tenant_template_deployment.libsonnet'),
  traffic_manager_azure_endpoint: (import 'traffic_manager_azure_endpoint.libsonnet'),
  traffic_manager_external_endpoint: (import 'traffic_manager_external_endpoint.libsonnet'),
  traffic_manager_nested_endpoint: (import 'traffic_manager_nested_endpoint.libsonnet'),
  traffic_manager_profile: (import 'traffic_manager_profile.libsonnet'),
  user_assigned_identity: (import 'user_assigned_identity.libsonnet'),
  video_analyzer: (import 'video_analyzer.libsonnet'),
  video_analyzer_edge_module: (import 'video_analyzer_edge_module.libsonnet'),
  virtual_desktop_application: (import 'virtual_desktop_application.libsonnet'),
  virtual_desktop_application_group: (import 'virtual_desktop_application_group.libsonnet'),
  virtual_desktop_host_pool: (import 'virtual_desktop_host_pool.libsonnet'),
  virtual_desktop_host_pool_registration_info: (import 'virtual_desktop_host_pool_registration_info.libsonnet'),
  virtual_desktop_scaling_plan: (import 'virtual_desktop_scaling_plan.libsonnet'),
  virtual_desktop_workspace: (import 'virtual_desktop_workspace.libsonnet'),
  virtual_desktop_workspace_application_group_association: (import 'virtual_desktop_workspace_application_group_association.libsonnet'),
  virtual_hub: (import 'virtual_hub.libsonnet'),
  virtual_hub_bgp_connection: (import 'virtual_hub_bgp_connection.libsonnet'),
  virtual_hub_connection: (import 'virtual_hub_connection.libsonnet'),
  virtual_hub_ip: (import 'virtual_hub_ip.libsonnet'),
  virtual_hub_route_table: (import 'virtual_hub_route_table.libsonnet'),
  virtual_hub_route_table_route: (import 'virtual_hub_route_table_route.libsonnet'),
  virtual_hub_security_partner_provider: (import 'virtual_hub_security_partner_provider.libsonnet'),
  virtual_machine: (import 'virtual_machine.libsonnet'),
  virtual_machine_data_disk_attachment: (import 'virtual_machine_data_disk_attachment.libsonnet'),
  virtual_machine_extension: (import 'virtual_machine_extension.libsonnet'),
  virtual_machine_packet_capture: (import 'virtual_machine_packet_capture.libsonnet'),
  virtual_machine_scale_set: (import 'virtual_machine_scale_set.libsonnet'),
  virtual_machine_scale_set_extension: (import 'virtual_machine_scale_set_extension.libsonnet'),
  virtual_machine_scale_set_packet_capture: (import 'virtual_machine_scale_set_packet_capture.libsonnet'),
  virtual_network: (import 'virtual_network.libsonnet'),
  virtual_network_dns_servers: (import 'virtual_network_dns_servers.libsonnet'),
  virtual_network_gateway: (import 'virtual_network_gateway.libsonnet'),
  virtual_network_gateway_connection: (import 'virtual_network_gateway_connection.libsonnet'),
  virtual_network_gateway_nat_rule: (import 'virtual_network_gateway_nat_rule.libsonnet'),
  virtual_network_peering: (import 'virtual_network_peering.libsonnet'),
  virtual_wan: (import 'virtual_wan.libsonnet'),
  vmware_cluster: (import 'vmware_cluster.libsonnet'),
  vmware_express_route_authorization: (import 'vmware_express_route_authorization.libsonnet'),
  vmware_netapp_volume_attachment: (import 'vmware_netapp_volume_attachment.libsonnet'),
  vmware_private_cloud: (import 'vmware_private_cloud.libsonnet'),
  vpn_gateway: (import 'vpn_gateway.libsonnet'),
  vpn_gateway_connection: (import 'vpn_gateway_connection.libsonnet'),
  vpn_gateway_nat_rule: (import 'vpn_gateway_nat_rule.libsonnet'),
  vpn_server_configuration: (import 'vpn_server_configuration.libsonnet'),
  vpn_server_configuration_policy_group: (import 'vpn_server_configuration_policy_group.libsonnet'),
  vpn_site: (import 'vpn_site.libsonnet'),
  web_app_active_slot: (import 'web_app_active_slot.libsonnet'),
  web_app_hybrid_connection: (import 'web_app_hybrid_connection.libsonnet'),
  web_application_firewall_policy: (import 'web_application_firewall_policy.libsonnet'),
  web_pubsub: (import 'web_pubsub.libsonnet'),
  web_pubsub_hub: (import 'web_pubsub_hub.libsonnet'),
  web_pubsub_network_acl: (import 'web_pubsub_network_acl.libsonnet'),
  web_pubsub_shared_private_link_resource: (import 'web_pubsub_shared_private_link_resource.libsonnet'),
  windows_function_app: (import 'windows_function_app.libsonnet'),
  windows_function_app_slot: (import 'windows_function_app_slot.libsonnet'),
  windows_virtual_machine: (import 'windows_virtual_machine.libsonnet'),
  windows_virtual_machine_scale_set: (import 'windows_virtual_machine_scale_set.libsonnet'),
  windows_web_app: (import 'windows_web_app.libsonnet'),
  windows_web_app_slot: (import 'windows_web_app_slot.libsonnet'),
}
