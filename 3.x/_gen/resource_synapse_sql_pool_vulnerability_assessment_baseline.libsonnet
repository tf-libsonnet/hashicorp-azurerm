local tf = (import 'github.com/tf-libsonnet/core/main.libsonnet');
{
  new(
    resourceLabel,
    rule_name,
    sql_pool_vulnerability_assessment_id,
    name,
    baseline=null,
    timeouts=null
  ):: tf.withResource(type='azurerm_synapse_sql_pool_vulnerability_assessment_baseline', label=resourceLabel, attrs=self.newAttrs(
    rule_name=rule_name,
    sql_pool_vulnerability_assessment_id=sql_pool_vulnerability_assessment_id,
    name=name,
    baseline=baseline,
    timeouts=timeouts
  )),
  newAttrs(
    name,
    rule_name,
    sql_pool_vulnerability_assessment_id,
    baseline=null,
    timeouts=null
  ):: std.prune(a={
    name: name,
    rule_name: rule_name,
    sql_pool_vulnerability_assessment_id: sql_pool_vulnerability_assessment_id,
    baseline: baseline,
    timeouts: timeouts,
  }),
  withName(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          name: value,
        },
      },
    },
  },
  withRuleName(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          rule_name: value,
        },
      },
    },
  },
  withSqlPoolVulnerabilityAssessmentId(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          sql_pool_vulnerability_assessment_id: value,
        },
      },
    },
  },
  withTimeouts(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          timeouts: value,
        },
      },
    },
  },
  withTimeoutsMixin(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          timeouts+: value,
        },
      },
    },
  },
  timeouts:: {
    new(
      update=null,
      create=null,
      delete=null,
      read=null
    ):: std.prune(a={
      update: update,
      create: create,
      delete: delete,
      read: read,
    }),
  },
  withBaseline(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          baseline: value,
        },
      },
    },
  },
  withBaselineMixin(resourceLabel, value):: {
    resource+: {
      azurerm_synapse_sql_pool_vulnerability_assessment_baseline+: {
        [resourceLabel]+: {
          baseline+: if std.isArray(v=value) then value else [value],
        },
      },
    },
  },
  baseline:: {
    new(
      result
    ):: std.prune(a={
      result: result,
    }),
  },
}
